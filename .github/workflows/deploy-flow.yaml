name: Rebuild Cloud Run Infra

env:
  PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
  PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
  PREFECT_GCP_CREDENTIALS_BLOCK_NAME: ${{ secrets.PREFECT_GCP_CREDENTIALS_BLOCK_NAME }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SERVICE_ACCOUNT_API_KEY_BASE64: ${{ secrets.GCP_SERVICE_ACCOUNT_API_KEY_BASE64 }}
  GCP_DATASET_NAME: ${{ secrets.GCP_DATASET_NAME }}
  GCP_DATASET_TABLE_NAME: ${{ secrets.GCP_DATASET_TABLE_NAME }}

on:
  push:
    branches:
      - main

jobs:
  provision-cloud-run-block:
    name: Setup Flow Infrastructure

    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Set up Python 3.8.3
        uses: actions/setup-python@v4
        with:
          python-version: "^3.8.3"

      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        id: "auth"
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_API_KEY_BASE64 }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: "${{ env.GCP_REGION }}-docker.pkg.dev"
          username: _json_key_base64
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_API_KEY_BASE64 }}

      - name: Build and push image to GAR
        id: docker-flow-image
        run: |
          RAW_IMAGE=$GCP_REGION-docker.pkg.dev/$GCP_PROJECT/xetra/flows
          IMAGE_URI=$GCP_REGION-docker.pkg.dev/$GCP_PROJECT/xetra/flows:$GITHUB_SHA
          docker build -q \
          --build-arg PREFECT_API_KEY=$PREFECT_API_KEY \
          --build-arg PREFECT_API_URL=$PREFECT_API_URL \
          --build-arg PREFECT_GCP_CREDENTIALS_BLOCK_NAME=$PREFECT_GCP_CREDENTIALS_BLOCK_NAME \
          --build-arg GCP_DATASET_NAME=$GCP_DATASET_NAME \
          --build-arg GCP_DATASET_TABLE_NAME=$GCP_DATASET_TABLE_NAME \
          --build-arg GCP_PROJECT_ID=$GCP_PROJECT_ID \
          --build-arg GCP_REGION=$GCP_REGION \
          --build-arg GCP_SERVICE_ACCOUNT_API_KEY_BASE64=$GCP_SERVICE_ACCOUNT_API_KEY_BASE64 \
          -t $RAW_IMAGE \
          -f ./Dockerfiles/flows.Dockerfile .
          docker tag $RAW_IMAGE $IMAGE_URI
          docker push $RAW_IMAGE
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_OUTPUT
        shell: bash

      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: 1.2.2

      - name: "Configure Poetry"
        run: |
          poetry config virtualenvs.create false --local
      - name: "Install dependencies"
        run: |
          poetry install --no-root --without dev,flows
      - name: Create Updated Cloud Run Block
        run: |
          cat <<EOF > cloud_run_block.py
          from prefect_gcp.cloud_run import CloudRunJob
          from prefect_gcp.credentials import GcpCredentials
          block = CloudRunJob(
            image="${{ steps.docker-flow-image.outputs.IMAGE_URI }}",
            region="${{ env.GCP_REGION }}",
            credentials=GcpCredentials.load("${{ env.PREFECT_GCP_CREDENTIALS_BLOCK_NAME }}"),
            cpu=8,
            memory=24,
            memory_unit="Gi",
            timeout=3600,
          )
          block.save("xetra", overwrite=True)
          EOF
          python cloud_run_block.py